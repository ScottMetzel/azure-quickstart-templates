{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "BaseName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 12,
            "metadata": {
                "description": "The base name for the VMs."
            }
        },
        "BaseSequenceNumber": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 999,
            "metadata": {
                "description": "The base sequence number used as part of the VM names."
            }
        },
        "VMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Size for the VM.  This sample uses premium disk and requires an 'S' sku."
            }
        },
        "VMOSManagedDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS",
                "Premium_ZRS",
                "StandardSSD_ZRS"
            ],
            "metadata": {
                "description": "The tier of managed disk to use for the OS disk of the virtual machine."
            }
        },
        "VMDataManagedDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS",
                "UltraSSD_LRS",
                "Premium_ZRS",
                "StandardSSD_ZRS"
            ],
            "metadata": {
                "description": "The tier of managed disk to use for the OS disk of the virtual machine."
            }
        },
        "VMCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "The number of VMs to create."
            }
        },
        "VMAvailabilityZones": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "The availability zones to use for each VM built. The length of the array should be greater than or equal to the number of VMs to deploy (e.g., 4 VMs to build, then at least 4 availability zones should be listed - '1', '2', '3', '2'. Provide an empty array to avoid using Availability Zones.)"
            }
        },
        "HybridUseBenefit": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicates any virtual machiness created should leverage the Hybrid Use Benefit for Windows."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain"
            }
        },
        "DefenderForIdentityAccessKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The access key for your Defender for Identity instance, which is needed by the Defender for Identity installer."
            }
        },
        "WorkspaceResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Resource ID of an existing Log Analytics workspace to use with diagnostics on the Load Balancer. Has no effect if 'EnableLoadBalancerDiagnostics' is set to 'false'."
            }
        },
        "VNetResourceID": {
            "type": "string",
            "metadata": {
                "description": "The resource ID for the existing virtual network to use with the frontend load balancer and VMs."
            }
        },
        "VMSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet (not the resource ID) to use with VMs."
            }
        },
        "VMFirstPrivateStaticIPAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The private static IP address to use for the first VM. VMs will use a contiguous IP Address range starting with this address."
            }
        },
        "VMDNSServers": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "The DNS servers to use, set on the network interface of each VM. If no servers are specified, the network interface uses the DNS servers specified on the virtual network."
            }
        },
        "TagEnvironment": {
            "type": "string",
            "defaultValue": "Production",
            "allowedValues": [
                "Development",
                "Production",
                "Test"
            ],
            "metadata": {
                "description": "The value for the 'Environment' tag."
            }
        },
        "DeployMonitoringAgentExtension": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicates whether the Monitoring Agent Extension should be deployed."
            }
        },
        "DeployAntimalwareExtension": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicates whether the IaaS Antimalware Extension should be deployed."
            }
        },
        "DeployCSInstallRolesDefenderExtension": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicates whether the Custom Script Extension which installs Windows Server roles and installs Defender for Identity should be deployed."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, which the template depends on."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Token to access '_artifactsLocation'. Auto-generated if using Visual Studio."
            }
        }
    },
    "variables": {
        "deploymentRegion": "[resourceGroup().location]",
        "vmPrivateStaticIPAddressStringArray": "[if(greaterOrEquals(length(parameters('VMFirstPrivateStaticIPAddress')),7),split(parameters('VMFirstPrivateStaticIPAddress'),'.'),'')]",
        "vNetVMSubnetResourceID": "[concat(parameters('VNetResourceID'),'/subnets/',parameters('VMSubnetName'))]",
        "vMExtensionCSInstallRolesDefenderforIdentityNameBase": "CustomScript-InstallRoles-and-InstallDefenderForIdentity",
        "defenderForIdentityContentURIs": "[createArray(concat(parameters('_artifactsLocation'),'installers/Azure%20ATP%20Sensor%20Setup.zip'))]",
        "vMExtensionCSCommandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command \"& {Install-WindowsFeature -Name AD-Domain-Services, DNS -IncludeAllSubFeature -IncludeManagementTools;Expand-Archive -Path ''.\\Azure ATP Sensor Setup.zip'' -DestinationPath ''.\\'';.\\''Azure ATP Sensor Setup.exe'' /quiet NetFrameworkCommandLineArguments=''/q'' AccessKey=''',parameters('DefenderForIdentityAccessKey'),'''}\"')]",
        "storageAccountName": "[last(split(split(parameters('_artifactsLocation'),'.')[0],'//'))]",
        "copy": [
            {
                "name": "networkInterfaceNameArray",
                "count": "[parameters('VMCount')]",
                "input": "[concat(parameters('BaseName'),format('{0:00}', copyIndex('networkInterfaceNameArray', parameters('BaseSequenceNumber'))), '-NIC-01')]"
            },
            {
                "name": "vMNameArray",
                "count": "[parameters('VMCount')]",
                "input": "[concat(parameters('BaseName'),format('{0:00}', copyIndex('vMNameArray', parameters('BaseSequenceNumber'))))]"
            },
            {
                "name": "vMOSDiskNameArray",
                "count": "[parameters('VMCount')]",
                "input": "[concat(parameters('BaseName'),format('{0:00}', copyIndex('vMOSDiskNameArray', parameters('BaseSequenceNumber'))), '-DISK-01')]"
            },
            {
                "name": "vMDataDiskNameArray",
                "count": "[parameters('VMCount')]",
                "input": "[concat(parameters('BaseName'),format('{0:00}', copyIndex('vMDataDiskNameArray', parameters('BaseSequenceNumber'))), '-DISK-02')]"
            },
            {
                "name": "vMPrivateStaticIPAddressArray",
                "count": "[parameters('VMCount')]",
                "input": "[if(greaterOrEquals(length(parameters('VMFirstPrivateStaticIPAddress')),7),concat(variables('vmPrivateStaticIPAddressStringArray')[0], '.', variables('vmPrivateStaticIPAddressStringArray')[1], '.', variables('vmPrivateStaticIPAddressStringArray')[2], '.', range(int(last(variables('vmPrivateStaticIPAddressStringArray'))),parameters('VMCount'))[copyIndex('vMPrivateStaticIPAddressArray')]),json('null'))]"
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('networkInterfaceNameArray')[copyIndex('CreateNetworkInterfaces')]]",
            "location": "[variables('deploymentRegion')]",
            "copy": {
                "name": "CreateNetworkInterfaces",
                "count": "[parameters('VMCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IPConfig01",
                        "properties": {
                            "privateIPAllocationMethod": "[if(greaterOrEquals(length(parameters('VMFirstPrivateStaticIPAddress')),7),'Static','Dynamic')]",
                            "privateIPAddress": "[if(greaterOrEquals(length(parameters('VMFirstPrivateStaticIPAddress')),7),variables('vMPrivateStaticIPAddressArray')[copyIndex('CreateNetworkInterfaces')],json('null'))]",
                            "subnet": {
                                "id": "[variables('vNetVMSubnetResourceID')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": "[if(greaterOrEquals(length(parameters('VMDNSServers')),1),parameters('VMDNSServers'),json('null'))]"
                }
            },
            "tags": {
                "Environment": "[parameters('TagEnvironment')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[variables('vMNameArray')[copyIndex('CreateVirtualMachines')]]",
            "location": "[variables('deploymentRegion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceNameArray')[copyIndex('CreateVirtualMachines')])]"
            ],
            "copy": {
                "name": "CreateVirtualMachines",
                "count": "[parameters('VMCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VMSize')]"
                },
                "licenseType": "[if(parameters('HybridUseBenefit'),'Windows_Server',json('null'))]",
                "osProfile": {
                    "computerName": "[variables('vMNameArray')[copyIndex('CreateVirtualMachines')]]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('vMOSDiskNameArray')[copyIndex('CreateVirtualMachines')]]",
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('VMOSManagedDiskType')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[variables('vMDataDiskNameArray')[copyIndex('CreateVirtualMachines')]]",
                            "caching": "ReadWrite",
                            "createOption": "Empty",
                            "diskSizeGB": 20,
                            "managedDisk": {
                                "storageAccountType": "[parameters('VMDataManagedDiskType')]"
                            },
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceNameArray')[copyIndex('CreateVirtualMachines')])]"
                        }
                    ]
                }
            },
            "tags": {
                "Environment": "[parameters('TagEnvironment')]"
            },
            "zones": "[if(greaterOrEquals(length(parameters('VMAvailabilityZones')),1),createArray(string(parameters('VMAvailabilityZones')[copyIndex('CreateVirtualMachines')])),json('null'))]"
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('vMNameArray')[copyIndex('AddMMAgents')],'/','MMAExtension')]",
            "location": "[variables('deploymentRegion')]",
            "condition": "[parameters('DeployMonitoringAgentExtension')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines',variables('vMNameArray')[copyIndex('AddMMAgents')])]"
            ],
            "copy": {
                "name": "AddMMAgents",
                "count": "[parameters('VMCount')]"
            },
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "MicrosoftMonitoringAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[reference(parameters('WorkspaceResourceId'), '2020-08-01').customerId]",
                    "stopOnMultipleConnections": "false"
                },
                "protectedSettings": {
                    "workspaceKey": "[listKeys(parameters('WorkspaceResourceId'), '2020-08-01').primarySharedKey]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('vMNameArray')[copyIndex('AddAntimalwareExtensions')],'/','IaaSAntimalware')]",
            "location": "[variables('deploymentRegion')]",
            "condition": "[parameters('DeployAntimalwareExtension')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('vMNameArray')[copyIndex('AddAntimalwareExtensions')],'MMAExtension')]"
            ],
            "copy": {
                "name": "AddAntimalwareExtensions",
                "count": "[parameters('VMCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "IaaSAntimalware",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "AntimalwareEnabled": true,
                    "Exclusions": {
                        "Extensions": "",
                        "Paths": "",
                        "Processes": ""
                    },
                    "RealtimeProtectionEnabled": "true",
                    "ScheduledScanSettings": {
                        "isEnabled": "true",
                        "day": "",
                        "scanType": "",
                        "time": ""
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('vMNameArray')[copyIndex('AddCustomScriptExtensions')],'/',variables('vMExtensionCSInstallRolesDefenderforIdentityNameBase'))]",
            "location": "[variables('deploymentRegion')]",
            "condition": "[parameters('DeployCSInstallRolesDefenderExtension')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('vMNameArray')[copyIndex('AddCustomScriptExtensions')],'IaaSAntimalware')]"
            ],
            "copy": {
                "name": "AddCustomScriptExtensions",
                "count": "[parameters('VMCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {},
                "protectedSettings": {
                    "commandToExecute": "[variables('vMExtensionCSCommandToExecute')]",
                    "fileUris": "[variables('defenderForIdentityContentURIs')]",
                    "storageAccountName": "[variables('storageAccountName')]",
                    "storageAccountKey": "[parameters('_artifactsLocationSasToken')]"
                }
            }
        }
    ],
    "outputs": {
        "DeploymentRegion": {
            "type": "string",
            "value": "[variables('deploymentRegion')]"
        },
        "VMNames": {
            "type": "array",
            "value": "[variables('vMNameArray')]"
        },
        "NetworkInterfaceNames": {
            "type": "array",
            "value": "[variables('networkInterfaceNameArray')]"
        },
        "VMPrivateStaticIPAddresses": {
            "type": "array",
            "value": "[variables('vMPrivateStaticIPAddressArray')]"
        },
        "VMOSDiskNames": {
            "type": "array",
            "value": "[variables('vMOSDiskNameArray')]"
        },
        "VMDataDiskNames": {
            "type": "array",
            "value": "[variables('vMDataDiskNameArray')]"
        },
        "VNetResourceID": {
            "type": "string",
            "value": "[parameters('VNetResourceID')]"
        },
        "vNetVMSubnetResourceID": {
            "type": "string",
            "value": "[variables('vNetVMSubnetResourceID')]"
        },
        "StorageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        }
    }
}
